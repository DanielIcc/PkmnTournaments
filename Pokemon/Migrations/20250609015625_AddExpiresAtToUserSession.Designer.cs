// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pokemon.Data;

#nullable disable

namespace Pokemon.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250609015625_AddExpiresAtToUserSession")]
    partial class AddExpiresAtToUserSession
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.16");

            modelBuilder.Entity("Pokemon.Data.Models.Jugador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apodo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Jugadores");
                });

            modelBuilder.Entity("Pokemon.Data.Models.JugadorTorneo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("JugadorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PartidosEmpatados")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PartidosGanados")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PartidosJugados")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PartidosPerdidos")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Puntos")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TorneoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("JugadorId");

                    b.HasIndex("TorneoId");

                    b.HasIndex("UserId", "TorneoId")
                        .IsUnique();

                    b.ToTable("JugadoresTorneos");
                });

            modelBuilder.Entity("Pokemon.Data.Models.Partido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fase")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GanadorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Jugador1Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Jugador2Id")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PuntosJugador1")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PuntosJugador2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TorneoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GanadorId");

                    b.HasIndex("Jugador1Id");

                    b.HasIndex("Jugador2Id");

                    b.HasIndex("TorneoId");

                    b.ToTable("Partidos");
                });

            modelBuilder.Entity("Pokemon.Data.Models.Torneo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("TEXT");

                    b.Property<int?>("GanadorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GanadorId");

                    b.ToTable("Torneos");
                });

            modelBuilder.Entity("Pokemon.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Pokemon.Data.Models.UserSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ip")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SessionToken")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("UserSessions");
                });

            modelBuilder.Entity("Pokemon.Data.Models.JugadorTorneo", b =>
                {
                    b.HasOne("Pokemon.Data.Models.Jugador", null)
                        .WithMany("TorneosJugados")
                        .HasForeignKey("JugadorId");

                    b.HasOne("Pokemon.Data.Models.Torneo", "Torneo")
                        .WithMany("Participantes")
                        .HasForeignKey("TorneoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pokemon.Data.Models.User", "User")
                        .WithMany("TorneosJugados")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Torneo");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pokemon.Data.Models.Partido", b =>
                {
                    b.HasOne("Pokemon.Data.Models.User", "Ganador")
                        .WithMany()
                        .HasForeignKey("GanadorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Pokemon.Data.Models.User", "Jugador1")
                        .WithMany()
                        .HasForeignKey("Jugador1Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokemon.Data.Models.User", "Jugador2")
                        .WithMany()
                        .HasForeignKey("Jugador2Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokemon.Data.Models.Torneo", "Torneo")
                        .WithMany("Partidos")
                        .HasForeignKey("TorneoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ganador");

                    b.Navigation("Jugador1");

                    b.Navigation("Jugador2");

                    b.Navigation("Torneo");
                });

            modelBuilder.Entity("Pokemon.Data.Models.Torneo", b =>
                {
                    b.HasOne("Pokemon.Data.Models.User", "Ganador")
                        .WithMany()
                        .HasForeignKey("GanadorId");

                    b.Navigation("Ganador");
                });

            modelBuilder.Entity("Pokemon.Data.Models.Jugador", b =>
                {
                    b.Navigation("TorneosJugados");
                });

            modelBuilder.Entity("Pokemon.Data.Models.Torneo", b =>
                {
                    b.Navigation("Participantes");

                    b.Navigation("Partidos");
                });

            modelBuilder.Entity("Pokemon.Data.Models.User", b =>
                {
                    b.Navigation("TorneosJugados");
                });
#pragma warning restore 612, 618
        }
    }
}
